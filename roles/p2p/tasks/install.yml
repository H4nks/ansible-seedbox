---
- name: Containers internal network
  docker_network:
    name: p2p

- name: Rtorrent
  docker_container:
    name: rtorrent
    image: xataz/rtorrent-rutorrent:latest
    state: started
    hostname: rtorrent
    tty: yes
    # restart: yes
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    cpu_period: 100000
    cpu_quota: 150000
    env:
        UID: "{{ p2p_uid }}"
        GID: "{{ group_gid }}"
    ports:
      # - "51413:51413"
      - "45000:45000"
      # - "6881:6881"
    volumes:
      - "{{ rtorrent_config }}:/config"
      - "{{ rtorrent_config }}/rtorrent/sessions:/data/.session"
      - "{{ rtorrent_downloads }}:/p2p/downloads"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - name: p2p

- name: Plex
  docker_container:
    name: plex
    image: plexinc/pms-docker:latest
    state: started
    hostname: plex
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    env:
        PLEX_UID: "{{ plex_uid }}"
        PLEX_GID: "{{ group_gid }}"
        PLEX_CLAIM: "{{ plex_claim_token }}"
        ADVERTISE_IP: "{{ ansible_host }}"
    volumes:
      - "{{ plex_movies }}:/data/movies"
      - "{{ plex_tv }}:/data/tv"
      - "{{ plex_transcode }}:/transcode"
      - "{{ plex_config }}:/config"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "32400:32400"
    networks:
      - name: p2p
        ipv4_address: "{{ plex_docker_ip }}"

- name: Jackett
  docker_container:
    name: jackett
    image: linuxserver/jackett:latest
    state: started
    hostname: jackett
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/etc/jackett:/config/Jackett"
      - "{{ torrent_blackhole }}:/downloads"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    networks:
      - name: p2p


- name: Radarr
  docker_container:
    name: radarr
    image: linuxserver/radarr:latest
    state: started
    hostname: radarr
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/etc/radarr:/config"
      - "{{ medias_root }}:/p2p"
      # - "{{ plex_movies }}:/movies"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    networks:
      - name: p2p
        links:
          - rtorrent:rtorrent
          - jackett:jackett

- name: Sonarr
  docker_container:
    name: sonarr
    image: linuxserver/sonarr:latest
    state: started
    hostname: sonarr
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/etc/sonarr:/config"
      - "{{ medias_root }}:/p2p"
      # - "{{ plex_tv }}:/tv"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    networks:
      - name: p2p
        links:
          - rtorrent:rtorrent
          - jackett:jackett

- name: Bazarr
  docker_container:
    name: bazarr
    image: linuxserver/bazarr:latest
    state: started
    hostname: bazarr
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    volumes:
      - "{{ plex_movies }}:/movies"
      - "{{ plex_tv }}:/tv"
      - "{{ bazarr_config }}:/config"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - name: p2p
        links:
          - sonarr:sonarr
          - radarr:radarr

- name: Tautulli
  docker_container:
    name: tautulli
    image: tautulli/tautulli:latest
    state: started
    hostname: tautulli
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/etc/tautulli:/config"
      - "{{ plex_config }}/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    networks:
      - name: p2p

- name: Ombi
  docker_container:
    name: ombi
    image: linuxserver/ombi:latest
    state: started
    hostname: ombi
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/etc/ombi:/config"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        PUID: "{{ p2p_uid }}"
        PGID: "{{ group_gid }}"
    networks:
      - name: p2p
        links:
          - plex:plex
          - sonarr:sonarr
          - radarr:radarr

- name: Netdata
  docker_container:
    name: netdata
    image: firehol/netdata:latest
    pull: yes
    hostname: netdata
    restart_policy: on-failure
    restart_retries: 2
    capabilities: "SYS_PTRACE"
    env:
      PUID: "{{ netdata_uid }}"
      PGID: 989     # Docker GID for socket permissions
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - name: p2p

- name: Portainer
  docker_container:
    name: portainer
    image: portainer/portainer:latest
    hostname: portainer
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/portainer:/data"
    networks:
      - name: p2p

- name: Caddyfile
  template:
    src: caddyfile.j2
    dest: /etc/Caddyfile
  register: caddyfile

- set_fact:
    restart_caddy: "yes"
  when: caddyfile is changed

- debug:
    msg: "Restart caddy: {{ restart_caddy }}"

- name: Reverse-Proxy
  docker_container:
    name: reverse-proxy
    image: abiosoft/caddy:latest
    state: started
    hostname: caddy
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    restart: "{{ restart_caddy }}"
    volumes:
      - "/etc/Caddyfile:/etc/Caddyfile"
      - "/var/caddy/srv:/var/www/html"
      - "{{ exposed_folder }}:/var/www/files/others"
      - "{{ plex_movies }}:/var/www/files/movies"
      - "{{ plex_tv }}:/var/www/files/tv"
      - "/etc/caddy/certs:/root/.caddy"
      - "/etc/localtime:/etc/localtime:ro"
    env:
        ACME_AGREE: true
    ports:
      - "80:80"
      - "443:443"
      # - "2015:2015"
    networks:
      - name: p2p
        links:
          - rtorrent:rtorrent
          - radarr:radarr
          - sonarr:sonarr
          - plex:plex
          - bazarr:bazarr
          - tautulli:tautulli
          - ombi:ombi
          - netdata:netdata
          - portainer:portainer

- name: Cleaning unused images and volumes
  shell: |
          docker image prune -af
          docker volume prune -f
