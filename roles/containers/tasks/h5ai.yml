---
- name: H5ai
  docker_container:
    name: h5ai
    image: bixidock/h5ai:latest
    state: started
    hostname: h5ai
    pull: yes
    restart_policy: on-failure
    restart_retries: 2
    cpu_shares: 128
    volumes:
      - "{{ exposed_folder }}:/var/www/Others:ro"
      - "{{ plex_movies }}:/var/www/Movies:ro"
      - "{{ plex_tv }}:/var/www/Tv:ro"
      - "/etc/localtime:/etc/localtime:ro"
    purge_networks: yes
    networks:
      - name: p2p
    labels:
      traefik.enable: "true"
      traefik.docker.network: "p2p"
      # service
      traefik.http.services.h5ai.loadbalancer.server.port: "8080"
      # basicauth middleware
      traefik.http.middlewares.h5ai-auth.basicauth.users: "{{ files_basicauth_user }}:{{ files_basicauth_password | password_hash('blowfish') }}"
      # http router
      traefik.http.routers.h5ai-http.rule: "Host(`files.{{ domain }}`)"
      traefik.http.routers.h5ai-http.entrypoints: "web"
      traefik.http.routers.h5ai-http.service: "h5ai"
      traefik.http.routers.h5ai-http.middlewares: "h5ai-auth@docker"
      # https router
      traefik.http.routers.h5ai-https.rule: "Host(`files.{{ domain }}`)"
      traefik.http.routers.h5ai-https.entrypoints: "websecure"
      traefik.http.routers.h5ai-https.service: "h5ai"
      traefik.http.routers.h5ai-https.middlewares: "h5ai-auth@docker"
      traefik.http.routers.h5ai-https.tls: "true"
      traefik.http.routers.h5ai-https.tls.certresolver: "cloudflare"